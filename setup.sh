#!/bin/bash

#    This file is part of rpi2pachube (formerly rpi2cosm).
#    Copyright (c) 2012, Ricardo Cabral <ricardo.arturo.cabral@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

realpath=`realpath $0 2>/dev/null`
if [ -z "$realpath" ]; then
  echo "Unable to set realpath variable. Reason: realpath command not found. Install it before running this utility." 1>&2
  exit 1
fi

echo "======================================="
echo "=  rpi2pachube configuration utility  ="
echo "======================================="
while [[ -z "$api_key" ]]; do
echo -n "Enter your API Key: "
read api_key
done

while [[ -z "$feed" ]]; do
echo -n "Enter this device's Feed ID: "
read feed
done

iface_possible=`ip link show | grep ^[0-9] | cut -d ' ' -f 2 | cut -d ':' -f 1 | tr "\n" ', ' | sed "s/,$//"`
echo -n "Enter your default network interface (${iface_possible}) (default: eth0): "
read iface
if [[ -z "$iface" ]]; then
iface="eth0"
fi

if [[ -f "~/.rpi2pachube.conf" ]]; then
while true; do
  echo -n "Configuration file already exists. Would you like to make a back up first? (y/n)"
  read option
  if [[ "$option" = "n" ]]; then
    break
  elif [[ "$option" = "y" ]]; then
    echo "Moved old configuration to ~/.rpi2pachube.conf.backup"
    cp ~/.rpi2pachube.conf ~/.rpi2pachube.conf.backup
    break
  fi
done
fi

echo "#    Generated by rpi2pachube configuration utility ($realpath)     " > /tmp/rpi2pachube.conf
echo "#    on `date`                                                      " >> /tmp/rpi2pachube.conf
echo "#    Feel free to modify this file or use the configuration utility." >> /tmp/rpi2pachube.conf
echo "                                                                    " >> /tmp/rpi2pachube.conf
echo "api_key=${api_key}                                                  " >> /tmp/rpi2pachube.conf
echo "feed=$feed                                                          " >> /tmp/rpi2pachube.conf
echo "iface=$iface                                                        " >> /tmp/rpi2pachube.conf
rm ~/.rpi2pachube.conf
mv /tmp/rpi2pachube.conf ~/.rpi2pachube.conf
if [[ $? = 0 ]]; then
  echo "Configuration file saved to ~/.rpi2pachube.conf"
else
  echo "Unable to save configuration file" 1>&2
fi

echo "Updating crontab..."
# Get crontab without any entries to rpi2pachube and save to temporary file
crontab -l 2>/dev/null | grep -v rpi2pachube > /tmp/crontab
# Get the directory where setup utility is; assuming rpi2pachube.sh is there too
dirname=`dirname $realpath`
# Add a new entry to our crontab
echo "*/5 * * * * ${dirname}/rpi2pachube.sh" >> /tmp/crontab
# Replace current crontab with our version
crontab /tmp/crontab
# Show it to the user
#env EDITOR=nano crontab -e
echo "Displaying `id -un`'s crontab:"
crontab -l
echo "Run 'crontab -e' if you see any problem with your crontab."

# Exit
exit 0
